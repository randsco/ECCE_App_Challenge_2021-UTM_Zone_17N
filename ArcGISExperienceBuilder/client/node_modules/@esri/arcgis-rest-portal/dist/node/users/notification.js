"use strict";
/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var arcgis_rest_request_1 = require("@esri/arcgis-rest-request");
var get_portal_url_1 = require("../util/get-portal-url");
/**
 * ```js
 * import { getUserNotifications } from '@esri/arcgis-rest-portal';
 * // username is inferred from UserSession
 * getUserNotifications({ authentication })
 *   .then(results) // results.notifications.length) => 3
 * ```
 * Get notifications for a user.
 *
 * @param requestOptions - options to pass through in the request
 * @returns A Promise that will resolve with the user's notifications
 */
function getUserNotifications(requestOptions) {
    var options = { httpMethod: "GET" };
    var username = encodeURIComponent(requestOptions.authentication.username);
    var portalUrl = get_portal_url_1.getPortalUrl(requestOptions);
    var url = portalUrl + "/community/users/" + username + "/notifications";
    options = tslib_1.__assign({}, requestOptions, options);
    // send the request
    return arcgis_rest_request_1.request(url, options);
}
exports.getUserNotifications = getUserNotifications;
/**
 * Delete a notification.
 *
 * @param requestOptions - Options for the request
 * @returns A Promise that will resolve with the success/failure status of the request
 */
function removeNotification(requestOptions) {
    var username = encodeURIComponent(requestOptions.authentication.username);
    var portalUrl = get_portal_url_1.getPortalUrl(requestOptions);
    var url = portalUrl + "/community/users/" + username + "/notifications/" + requestOptions.id + "/delete";
    return arcgis_rest_request_1.request(url, requestOptions);
}
exports.removeNotification = removeNotification;
//# sourceMappingURL=notification.js.map