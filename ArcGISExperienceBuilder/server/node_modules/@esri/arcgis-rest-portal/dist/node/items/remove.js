"use strict";
/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var arcgis_rest_request_1 = require("@esri/arcgis-rest-request");
var get_portal_url_1 = require("../util/get-portal-url");
var helpers_1 = require("./helpers");
/**
 * ```js
 * import { removeItem } from "@esri/arcgis-rest-portal";
 * //
 * removeItem({
 *   id: "3ef",
 *   authentication
 * })
 * ```
 * Delete an item from the portal. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/delete-item.htm) for more information.
 *
 * @param requestOptions - Options for the request
 * @returns A Promise that deletes an item.
 */
function removeItem(requestOptions) {
    return helpers_1.determineOwner(requestOptions).then(function (owner) {
        var url = get_portal_url_1.getPortalUrl(requestOptions) + "/content/users/" + owner + "/items/" + requestOptions.id + "/delete";
        return arcgis_rest_request_1.request(url, requestOptions);
    });
}
exports.removeItem = removeItem;
/**
 * ```js
 * import { removeItemRelationship } from "@esri/arcgis-rest-portal";
 * //
 * removeItemRelationship({
 *   originItemId: '3ef',
 *   destinationItemId: 'ae7',
 *   relationshipType: 'Service2Layer',
 *   authentication
 * })
 *   .then(response)
 * ```
 * Remove a relationship between two items. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/delete-relationship.htm) for more information.
 *
 * @param requestOptions - Options for the request
 * @returns A Promise to add item resources.
 */
function removeItemRelationship(requestOptions) {
    return helpers_1.determineOwner(requestOptions).then(function (owner) {
        var url = get_portal_url_1.getPortalUrl(requestOptions) + "/content/users/" + owner + "/removeRelationship";
        var options = arcgis_rest_request_1.appendCustomParams(requestOptions, ["originItemId", "destinationItemId", "relationshipType"], { params: tslib_1.__assign({}, requestOptions.params) });
        return arcgis_rest_request_1.request(url, options);
    });
}
exports.removeItemRelationship = removeItemRelationship;
/**
 * Remove a resource associated with an item
 *
 * @param requestOptions - Options for the request
 * @returns A Promise that deletes an item resource.
 */
function removeItemResource(requestOptions) {
    return helpers_1.determineOwner(requestOptions).then(function (owner) {
        var url = get_portal_url_1.getPortalUrl(requestOptions) + "/content/users/" + owner + "/items/" + requestOptions.id + "/removeResources";
        // mix in user supplied params
        requestOptions.params = tslib_1.__assign({}, requestOptions.params, { resource: requestOptions.resource });
        return arcgis_rest_request_1.request(url, requestOptions);
    });
}
exports.removeItemResource = removeItemResource;
/**
 * ```js
 * import { removeFolder } from "@esri/arcgis-rest-portal";
 * //
 * removeFolder({
 *   folderId: "fe4",
 *   owner: "c@sey",
 *   authentication
 * })
 *   .then(response)
 *
 * ```
 * Delete a non-root folder and all the items it contains. See the [REST
 * Documentation](https://developers.arcgis.com/rest/users-groups-and-items/delete-folder.htm) for
 * more information.
 *
 * @param requestOptions - Options for the request
 * @returns A Promise that deletes a folder
 */
function removeFolder(requestOptions) {
    return helpers_1.determineOwner(requestOptions).then(function (owner) {
        var url = get_portal_url_1.getPortalUrl(requestOptions) + "/content/users/" + encodeURIComponent(owner) + "/" + requestOptions.folderId + "/delete";
        return arcgis_rest_request_1.request(url, requestOptions);
    });
}
exports.removeFolder = removeFolder;
//# sourceMappingURL=remove.js.map