"use strict";
/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var arcgis_rest_request_1 = require("@esri/arcgis-rest-request");
var get_portal_url_1 = require("../util/get-portal-url");
/**
 * ```js
 * import { getUserInvitations } from '@esri/arcgis-rest-portal';
 * // username is inferred from UserSession
 * getUserInvitations({ authentication })
 *   .then(response) // response.userInvitations.length => 3
 * ```
 * Get all invitations for a user. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/user-invitations.htm) for more information.
 *
 * @param requestOptions - options to pass through in the request
 * @returns A Promise that will resolve with the user's invitations
 */
function getUserInvitations(requestOptions) {
    var options = { httpMethod: "GET" };
    var username = encodeURIComponent(requestOptions.authentication.username);
    var portalUrl = get_portal_url_1.getPortalUrl(requestOptions);
    var url = portalUrl + "/community/users/" + username + "/invitations";
    options = tslib_1.__assign({}, requestOptions, options);
    // send the request
    return arcgis_rest_request_1.request(url, options);
}
exports.getUserInvitations = getUserInvitations;
/**
 * ```js
 * import { getUserInvitation } from '@esri/arcgis-rest-portal';
 * // username is inferred from UserSession
 * getUserInvitation({
 *   invitationId: "3ef",
 *   authentication
 * })
 *   .then(response) // => response.accepted => true
 * ```
 * Get an invitation for a user by id. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/user-invitation.htm) for more information.
 *
 * @param requestOptions - options to pass through in the request
 * @returns A Promise that will resolve with the invitation
 */
function getUserInvitation(requestOptions) {
    var username = encodeURIComponent(requestOptions.authentication.username);
    var portalUrl = get_portal_url_1.getPortalUrl(requestOptions);
    var url = portalUrl + "/community/users/" + username + "/invitations/" + requestOptions.invitationId;
    var options = { httpMethod: "GET" };
    options = tslib_1.__assign({}, requestOptions, options);
    // send the request
    return arcgis_rest_request_1.request(url, options);
}
exports.getUserInvitation = getUserInvitation;
/**
 * ```js
 * import { acceptInvitation } from '@esri/arcgis-rest-portal';
 * // username is inferred from UserSession
 * acceptInvitation({
 *   invitationId: "3ef",
 *   authentication
 * })
 *   .then(response)
 * ```
 * Accept an invitation. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/accept-invitation.htm) for more information.
 *
 * @param requestOptions - Options for the request
 * @returns A Promise that will resolve with the success/failure status of the request
 */
function acceptInvitation(requestOptions) {
    var username = encodeURIComponent(requestOptions.authentication.username);
    var portalUrl = get_portal_url_1.getPortalUrl(requestOptions);
    var url = portalUrl + "/community/users/" + username + "/invitations/" + requestOptions.invitationId + "/accept";
    var options = tslib_1.__assign({}, requestOptions);
    return arcgis_rest_request_1.request(url, options);
}
exports.acceptInvitation = acceptInvitation;
/**
 * ```js
 * import { declineInvitation } from '@esri/arcgis-rest-portal';
 * // username is inferred from UserSession
 * declineInvitation({
 *   invitationId: "3ef",
 *   authentication
 * })
 *   .then(response)
 * ```
 * Decline an invitation. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/decline-invitation.htm) for more information.
 *
 * @param requestOptions - Options for the request
 * @returns A Promise that will resolve with the success/failure status of the request
 */
function declineInvitation(requestOptions) {
    var username = encodeURIComponent(requestOptions.authentication.username);
    var portalUrl = get_portal_url_1.getPortalUrl(requestOptions);
    var url = portalUrl + "/community/users/" + username + "/invitations/" + requestOptions.invitationId + "/decline";
    var options = tslib_1.__assign({}, requestOptions);
    return arcgis_rest_request_1.request(url, options);
}
exports.declineInvitation = declineInvitation;
//# sourceMappingURL=invitation.js.map