"use strict";var __awaiter=this&&this.__awaiter||function(e,i,a,u){return new(a=a||Promise)(function(r,t){function o(e){try{s(u.next(e))}catch(e){t(e)}}function n(e){try{s(u.throw(e))}catch(e){t(e)}}function s(e){var t;e.done?r(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(o,n)}s((u=u.apply(e,i||[])).next())})},__generator=this&&this.__generator||function(r,o){var n,s,i,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]},e={next:t(0),throw:t(1),return:t(2)};return"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function t(t){return function(e){return function(t){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,s&&(i=2&t[0]?s.return:t[0]?s.throw||((i=s.return)&&i.call(s),0):s.next)&&!(i=i.call(s,t[1])).done)return i;switch(s=0,i&&(t=[2&t[0],i.value]),t[0]){case 0:case 1:i=t;break;case 4:return a.label++,{value:t[1],done:!1};case 5:a.label++,s=t[1],t=[0];continue;case 7:t=a.ops.pop(),a.trys.pop();continue;default:if(!(i=0<(i=a.trys).length&&i[i.length-1])&&(6===t[0]||2===t[0])){a=0;continue}if(3===t[0]&&(!i||t[1]>i[0]&&t[1]<i[3])){a.label=t[1];break}if(6===t[0]&&a.label<i[1]){a.label=i[1],i=t;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(t);break}i[2]&&a.ops.pop(),a.trys.pop();continue}t=o.call(r,a)}catch(e){t=[6,e],s=0}finally{n=i=0}if(5&t[0])throw t[1];return{value:t[0]?t[1]:void 0,done:!0}}([t,e])}}};Object.defineProperty(exports,"__esModule",{value:!0});var Koa=require("koa"),Router=require("koa-router"),noCacheStaticServe=require("koa-static"),cacheStaticServe=require("koa-static-cache"),send=require("koa-send"),mount=require("koa-mount"),bodyParser=require("koa-bodyparser"),compress=require("koa-compress"),http=require("http"),fs=require("fs"),path=require("path"),http2=require("http2"),https=require("https"),_commander=require("commander"),exb_history_404_1=require("exb-history-404"),routes_1=require("./routes"),utils=require("./utils");process.env.NODE_TLS_REJECT_UNAUTHORIZED="0";var bodyParserBodyLimit="50mb",app=new Koa,router=new Router,commander=_commander;commander.version("0.0.1").option("-s, --ssr","Enable server side render").option("--disable_gzip","Disable gzip").option("--disable_file_cache","Disable file cache in server").option("-p, --port <port>","Http port").option("--https_port <port>","Https port").option("--path <path>","Mount path").option("-h, --host_env <hostEnv>","Host env").option("-d, --dev_edition","Is Dev Edition").option("--http_only","Disable https").option("-c, --cert_folder <folder>","Folder that stores the certificate").option("-b, --build_number <buildNumber>","build number").parse(process.argv);var settingInfo,mountPath=(global.commander=commander).path||process.env.EXB_MOUNT_PATH,hostEnv=commander.host_env||process.env.EXB_HOST_ENV,isDevEdition=commander.dev_edition;commander.dev_edition||(settingInfo=JSON.parse(fs.readFileSync(__dirname+"/setting.json","utf8")),isDevEdition=settingInfo.isDevEdition);var buildNumberEnv="559";"BUILD_NUMBER_ENV"===buildNumberEnv&&(buildNumberEnv="");var buildNumber=commander.build_number||buildNumberEnv||"";mountPath?/\/$/.test(mountPath)||(mountPath+="/"):mountPath="/",global.mountPath=mountPath,global.hostEnv=hostEnv||"prod",global.isDevEdition=isDevEdition;var defaultPort=3e3,defaultHttpsPort=3001,port=commander.port||process.env.EXB_HTTP_PORT||defaultPort,httpsPort=commander.https_port||process.env.EXB_HTTPS_PORT||defaultHttpsPort;commander.ssr&&(defaultPort=4e3,defaultHttpsPort=4001),app.use(handleStemappRename),app.use(function(t,r){return __awaiter(void 0,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return commander.http_only?[4,r()]:[3,2];case 1:return e.sent(),[2];case 2:return"http"!==t.protocol?[3,3]:(t.URL.protocol="https",t.URL.port=httpsPort+"",t.redirect(t.URL.toString()),[3,5]);case 3:return[4,r()];case 4:e.sent(),e.label=5;case 5:return[2]}})})}).use(function(t,r){return __awaiter(void 0,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return t.res.setHeader("Access-Control-Allow-Origin","*"),t.res.setHeader("Access-Control-Allow-Methods","GET, PUT, POST, DELETE, HEAD, OPTIONS"),t.res.setHeader("Access-Control-Allow-Headers","Content-Type"),t.res.setHeader("Referrer-Policy","no-referrer-when-downgrade"),[4,r()];case 1:return e.sent(),[2]}})})}),app.use(bodyParser({jsonLimit:bodyParserBodyLimit,xmlLimit:bodyParserBodyLimit,textLimit:bodyParserBodyLimit,formLimit:bodyParserBodyLimit})),commander.disable_gzip||app.use(compress({filter:function(e){return/(text)|(application\/javascript)|(application\/json)/i.test(e)},threshold:2048,gzip:{flush:require("zlib").constants.Z_SYNC_FLUSH},deflate:{flush:require("zlib").constants.Z_SYNC_FLUSH},br:!1})),app.use(handleSignIn).use(exb_history_404_1.default({ssr:commander.ssr,path:path.join(__dirname,"../../client/dist/experience/"),urlPath:mountPath+"experience/",mountPath:mountPath})).use(exb_history_404_1.default({ssr:commander.ssr,path:path.join(__dirname,"../../client/dist/template/"),urlPath:mountPath+"template/",mountPath:mountPath})).use(exb_history_404_1.default({ssr:commander.ssr,path:path.join(__dirname,"../../client/dist/builder/"),urlPath:mountPath+"builder/",mountPath:mountPath})).use(exb_history_404_1.default({ssr:commander.ssr,path:path.join(__dirname,"../../client/dist/site/"),urlPath:mountPath+"site/",mountPath:mountPath})),app.use(router.routes()).use(router.allowedMethods()),app.use(function(t,r){return __awaiter(void 0,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return"/service-worker.js"!==t.path?[3,2]:[4,send(t,"/service-worker.js",{root:path.join(__dirname,"/../../client/dist")})];case 1:return e.sent(),[3,4];case 2:return[4,r()];case 3:e.sent(),e.label=4;case 4:return[2]}})})});var MAX_AGE=isDevEdition?0:72e6,options=isDevEdition?{maxage:MAX_AGE}:{maxage:MAX_AGE,buffer:!0,dynamic:!0,preload:!0},staticServe=isDevEdition||commander.disable_file_cache?noCacheStaticServe:cacheStaticServe;app.use(mount(mountPath+buildNumber,staticServe(__dirname+"/../../client/dist/",options))),app.use(mount(mountPath+"jimu-core/unsupported-browser",staticServe(__dirname+"/../../client/dist/jimu-core/unsupported-browser",options))),app.use(mount(mountPath+"assets",staticServe(__dirname+"/../../client/dist/assets",options))),app.use(mount(mountPath+"storybook",staticServe(__dirname+"/../../client/dist/storybook",options))),router.get("/info",function(e,t){e.body=require("./../../client/dist/jimu-core/version.json")}),router.post("/check_url",routes_1.OtherRoutes.checkUrl),isDevEdition&&(app.use(mount("/doc/",staticServe(__dirname+"/../../doc/dist",options))),app.use(mount("/apps/",staticServe(__dirname+"/public/apps"),options)),router.get("/download/:appId",routes_1.Apps.download),router.get("/signininfo",routes_1.SigninInfoRoutes.getAll),router.post("/signininfo",routes_1.SigninInfoRoutes.add),router.post("/sharing/rest/content/users/addItem",routes_1.Apps.addItem),router.post("/sharing/rest/search",routes_1.Apps.searchItem),router.get("/sharing/rest/search",routes_1.Apps.searchItem),router.post("/sharing/rest/content/users/items/:id/update",routes_1.Apps.updateAppItem),router.post("/sharing/rest/content/users/items/:id/data",routes_1.Apps.getItemData),router.get("/sharing/rest/content/users/items/:id/data",routes_1.Apps.getItemData),router.post("/sharing/rest/content/users/items/:id",routes_1.Apps.items),router.post("/sharing/rest/content/users/items/:id/delete",routes_1.Apps.removeItem),router.post("/sharing/rest/content/users/items/:id/addResources",routes_1.Apps.addResources),router.post("/sharing/rest/content/users/items/:id/updateResources",routes_1.Apps.updateResources),router.post("/sharing/rest/content/users/items/:id/removeResources",routes_1.Apps.removeResources),router.post("/sharing/rest/content/users/items/:id/resources",routes_1.Apps.resources),router.get("/sharing/rest/content/users/items/:id/resources",routes_1.Apps.resources)),app.on("error",function(e,t){console.log("server error",e.message)});var certFolder,httpsServer,http2Server,httpServer=http.createServer(app.callback()).listen(port,function(){console.log("Http server running on port",port),isDevEdition&&console.log("Developer Edition")});function handleConnectError(e){e&&e.on("connection",function(t){t.on("error",function(e){t.destroy()})})}function handleStemappRename(r,o){return __awaiter(this,void 0,void 0,function(){var t;return __generator(this,function(e){switch(e.label){case 0:return r.path.startsWith("/stemapp")?(t=r.url.replace("/stemapp","/experience"),r.redirect(t),[2]):[4,o()];case 1:return e.sent(),[2]}})})}function handleSignIn(t,r){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(e){switch(e.label){case 0:return[mountPath+"builder",mountPath+"builder/page/template",""+mountPath].includes(t.path)?utils.checkCookie(t)?[4,r()]:[3,2]:[3,4];case 1:return e.sent(),[3,3];case 2:return redirectToLogin(t),[2];case 3:return[3,8];case 4:return t.path!==mountPath+"page/set-portalurl"||isDevEdition?[3,5]:(t.redirect(mountPath+"page/landing"),[3,8]);case 5:return t.path===mountPath+"page/landing"&&isDevEdition?(t.redirect(mountPath+"page/set-portalurl"),[3,8]):[3,6];case 6:return[4,r()];case 7:e.sent(),e.label=8;case 8:return[2]}})})}function redirectToLogin(e){isDevEdition?e.redirect(mountPath+"page/set-portalurl"):e.redirect(mountPath+"page/landing")}handleConnectError(httpServer),commander.http_only||(certFolder=commander.cert_folder?commander.cert_folder:path.join(__dirname,"../cert"),fs.existsSync(certFolder)||(console.error("Certificate folder does not exist."),process.exit(0)),fs.existsSync(path.join(certFolder,"server.key"))&&fs.existsSync(path.join(certFolder,"server.cert"))||(console.error("Does not find certificate."),process.exit(0)),handleConnectError(isDevEdition?httpsServer=https.createServer({key:fs.readFileSync(path.join(certFolder,"server.key"),"utf8"),cert:fs.readFileSync(path.join(certFolder,"server.cert"),"utf8")},app.callback()).listen(httpsPort,function(){return console.log("Https server running on port",httpsPort)}):http2Server=http2.createSecureServer({key:fs.readFileSync(path.join(certFolder,"server.key"),"utf8"),cert:fs.readFileSync(path.join(certFolder,"server.cert"),"utf8")},app.callback()).listen(httpsPort,function(){return console.log("Https server running on port",httpsPort)})));